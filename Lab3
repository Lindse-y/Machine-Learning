[store listings]
Avenue Jewelers          Avenue Restaurant
Barney's Castle          City Appliances
Clancy's Clothiers       Friendly Fast Food
Hardware Corner          Musical Planet
Randolph's               Sports and More

[store categories]
Jewelry Store            Family Restaurant
Arcade Games             Home Appliances
Clothing                 Fast Food Restaurant
Hardware and Tools       Music and Movies
Books, Games and Gifts   Sports Equipment

[Maximized store placement by zone and traffic foot print data]
Hardware Corner
Avenue Restaurant

[after 2nd store added - Current remaining stores to be allocated]
['Avenue Jewelers', "Barney's Castle", 'City Appliances', "Clancy's Clothiers", 'Friendly Fast Food', 'Musical Planet', "Randolph's", 'Sports and More']

Friendly Fast Food

[after 3rd store added - Current remaining stores to be allocated]
['Avenue Jewelers', "Barney's Castle", 'City Appliances', "Clancy's Clothiers", 'Musical Planet', "Randolph's", 'Sports and More']

Sports and More

[after 4th store added - Current remaining stores to be allocated]
['Avenue Jewelers', "Barney's Castle", 'City Appliances', "Clancy's Clothiers", 'Musical Planet', "Randolph's"]

Musical Planet

[after 5th store added - Current remaining stores to be allocated]
['Avenue Jewelers', "Barney's Castle", 'City Appliances', "Clancy's Clothiers", "Randolph's"]

Barney's Castle

[after 6th store added - Current remaining stores to be allocated]
['Avenue Jewelers', 'City Appliances', "Clancy's Clothiers", "Randolph's"]

Avenue Jewelers

[after 7th store added - Current remaining stores to be allocated]
['City Appliances', "Clancy's Clothiers", "Randolph's"]

City Appliances

[after 8th store added - Current remaining stores to be allocated]
["Clancy's Clothiers", "Randolph's"]

Randolph's

[after 9th store added - Current remaining stores to be allocated]
["Clancy's Clothiers"]

Clancy's Clothiers

[No more stores to allocate]

# import some packaged libraries
import numpy as np
import random as rn

# declare a list of 10 elements (initialized to zeros)
list1 = [0 for x in range(10)]
print (list1)
print ("")

# declare a random list of 10 unique elements
list2 = rn.sample(range(1, 11), 10)
print (list2)
print ("")

# populate the list of zeros with 1's and 0's
for i in range(0, 10) :
    list1[i] = rn.randint(0, 1)

# a list in numpy form
c = np.asarray(list1)
print ("numps", c)
print ("")
# print (list2)

# multi â€“ dimensional analysis

# empty regular list
array1 = []
for i in range(3):
    arr = i * np.ones((3,3))
    array1.append(arr)
np_array1 = np.array(array1)
